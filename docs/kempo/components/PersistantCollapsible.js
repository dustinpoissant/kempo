import Collapsible from"./Collapsible.js";import{onEvent,offEvent}from"../utils/element.js";const updateFromStorage=Symbol("updateFromStorage"),storageChangeHandler=Symbol("storageChangeHandler"),changeHandler=Symbol("changeHandler");export default class PersistantCollapsible extends Collapsible{constructor(){super(),this[updateFromStorage]=()=>{this.opened="true"===localStorage.getItem(`PersistantCollapsible-${this.id}`)},this[storageChangeHandler]=e=>{e.key===`PersistantCollapsible-${this.id}`&&this[updateFromStorage]()},this[changeHandler]=()=>{this.id&&localStorage.setItem(`PersistantCollapsible-${this.id}`,this.opened)}}async render(e){return!!await super.render(e)&&(this[updateFromStorage](),onEvent(window,"storage",this[storageChangeHandler]),onEvent(this,"openedchanged",this[changeHandler]),!0)}disconnectedCallback(){super.disconnectedCallback(),offEvent(window,"storage",this[storageChangeHandler]),offEvent(this,"openedchanged",this[changeHandler]),window.removeEventListener("storage",this[storageChangeHandler])}}window.customElements.define("k-p-collapsible",PersistantCollapsible);