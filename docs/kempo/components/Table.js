import Component from"./Component.js";import Icon from"./Icon.js";import{toTitleCase}from"../utils/string.js";export default class Table extends Component{constructor(e=!1,t=!1,r={before:[],after:[]}){super(),this.registerProps({fields:[],records:[],controls:{before:[],after:[]}}),e&&this.setData(e,t,r)}async render(e){return!!await super.render(e)&&(this.renderFields(),this.renderRecords(),!0)}renderFields(){const e=this.controls?.before?.length?"<th></th>":"",t=this.controls?.after?.length?"<th></th>":"";this.shadowRoot.getElementById("fields").innerHTML=`${e}${this.fields.map((({label:e})=>`<th>${e}</th>`)).join("")}${t}`}renderRecords(){const e=this.shadowRoot.getElementById("records");e.innerHTML="",this.records.forEach((t=>{const r=document.createElement("tr");this.controls?.before?.length&&r.appendChild(this.renderControls(this.controls.before,t)),this.fields.forEach((({name:e})=>{const n=document.createElement("td");let s=t[e]||"";Array.isArray(s)&&(s=s.join(", ")),n.innerHTML=s,r.appendChild(n)})),this.controls?.after?.length&&r.appendChild(this.renderControls(this.controls.after,t)),e.appendChild(r)}))}renderControls(e=[],t){const r=document.createElement("td");return e.forEach((({html:e,icon:n,action:s,render:o})=>{if(e)r.appendChild(document.createRange().createContextualFragment(e));else if(o&&"function"==typeof o){const e=o(t,this);e instanceof HTMLElement?r.appendChild(e):"string"==typeof e&&r.appendChild(document.createRange().createContextualFragment(e))}else if(n){const e=document.createElement("button");e.appendChild(new Icon(n)),s&&e.addEventListener("click",(()=>s(t,this))),r.appendChild(e)}})),r}setData(e,t=!1,r={before:[],after:[]}){this.records=e,this.fields=t||Table.extractFieldsFromRecords(this.records),this.controls=r,this.renderFields(),this.renderRecords()}get shadowTemplate(){return`\n      ${super.shadowTemplate}\n      <div class="responsive-table">\n        <table>\n          <thead id="fields"></thead>\n          <tbody id="records"></tbody>\n        </table>\n      </div>\n    `}get shadowStyles(){return`\n      ${super.shadowStyles}\n      :host {\n        display: block;\n        margin-bottom: var(--spacer);\n      }\n    `}static extractFieldsFromRecords(e,t=100){const r=new Set;return e.slice(0,t).forEach((e=>{Object.keys(e).forEach((e=>r.add(e)))})),[...r].map((e=>({name:e,label:toTitleCase(e)})))}}window.customElements.define("k-table",Table);