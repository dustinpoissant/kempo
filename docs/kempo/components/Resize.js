import Component from"./Component.js";import drag from"../utils/drag.js";const startSize=Symbol("startSize"),dragStartHandler=Symbol("dragStartHandler"),dragEndHandler=Symbol("dragEndHandler"),dragSideHandler=Symbol("dragSideHandler"),dragBottomHandler=Symbol("dragBottomHandler"),dragCornerHandler=Symbol("dragCornerHandler"),cleanupFuncs=Symbol("cleanupFuncs");export default class Resize extends Component{constructor(){super(),this[startSize]={width:0,height:0},this[dragStartHandler]=({element:n})=>{const{width:e,height:t}=this.getBoundingClientRect();this[startSize].width=e,this[startSize].height=t,this.resizing=n.id},this[dragEndHandler]=()=>{this.resizing=""},this[dragSideHandler]=({x:n})=>{this.style.width=this[startSize].width+n+"px"},this[dragBottomHandler]=({y:n})=>{this.style.height=this[startSize].height+n+"px"},this[dragCornerHandler]=({x:n,y:e})=>{this.style.width=this[startSize].width+n+"px",this.style.height=this[startSize].height+e+"px"},this[cleanupFuncs]=[],this.registerAttribute("resizing","")}async render(n){return!!await super.render(n)&&(this[cleanupFuncs].push(drag({element:this.shadowRoot.getElementById("side"),startCallback:this[dragStartHandler],endCallback:this[dragEndHandler],callback:this[dragSideHandler],preventScroll:!0})),this[cleanupFuncs].push(drag({element:this.shadowRoot.getElementById("bottom"),startCallback:this[dragStartHandler],endCallback:this[dragEndHandler],callback:this[dragBottomHandler],preventScroll:!0})),this[cleanupFuncs].push(drag({element:this.shadowRoot.getElementById("corner"),startCallback:this[dragStartHandler],endCallback:this[dragEndHandler],callback:this[dragCornerHandler],preventScroll:!0})),!0)}disconnectedCallback(){super.disconnectedCallback(),this[cleanupFuncs].forEach((n=>n()))}get shadowTemplate(){return`\n      <div id="main">\n        ${super.shadowTemplate}\n      </div>\n      <div id="side" class="handle">\n        <svg viewBox="0 0 15 64" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" d="m 15.000001,3 c 0,-1.661998 -1.115001,-3 -2.5,-3 -1.384999,0 -2.5,1.338002 -2.5,3 v 58 c 0,1.661998 1.115001,3 2.5,3 1.384999,0 2.5,-1.338002 2.5,-3 z M 5.0000008,3 c 0,-1.661998 -1.115001,-3 -2.5,-3 C 1.1150018,0 7.5891117e-7,1.338002 7.5891117e-7,3 v 58 c 0,1.661998 1.11500104108883,3 2.50000004108883,3 1.384999,0 2.5,-1.338002 2.5,-3 z" /></svg>\n      </div>\n      <div id="bottom" class="handle">\n        <svg viewBox="0 0 64 15" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" d="M 3,0 C 1.3380017,0 0,1.1150014 0,2.5 0,3.8849986 1.3380017,5 3,5 H 61 C 62.661998,5 64,3.8849986 64,2.5 64,1.1150014 62.661998,0 61,0 Z M 3,10 C 1.3380017,10 0,11.115001 0,12.5 0,13.884999 1.3380017,15 3,15 h 58 c 1.661998,0 3,-1.115001 3,-2.5 C 64,11.115001 62.661998,10 61,10 Z" /></svg>\n      </div>\n      <div id="corner" class="handle">\n        <svg version="1.1" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" d="m12.735 3.0095e-4c-0.77288 0.011702-1.6098 0.36368-2.2773 1.0313l-9.4258 9.4258c-1.1868 1.1868-1.3772 2.908-0.42773 3.8574 0.94943 0.94943 2.6687 0.7571 3.8555-0.42969l9.4258-9.4258c1.1868-1.1868 1.3772-2.906 0.42774-3.8555-0.41537-0.41537-0.977-0.61262-1.5781-0.60352zm0 8.5684c-0.77288 0.011702-1.6098 0.36564-2.2773 1.0332l-0.85744 0.85546c-1.1868 1.1868-1.3772 2.908-0.42773 3.8574 0.94943 0.94943 2.6687 0.7571 3.8555-0.42969l0.85742-0.85742c1.1868-1.1868 1.3772-2.906 0.42773-3.8555-0.41537-0.41537-0.977-0.61262-1.5781-0.60352z" /></svg>\n      </div>\n    `}get shadowStyles(){return`\n      ${super.shadowStyles}\n      :host {\n        --handle_size: 1rem;\n\n        display: grid;\n        grid-template-columns: 1fr var(--handle_size);\n        grid-template-rows: 1fr var(--handle_size);\n        border: 1px solid var(--c_border);\n        border-radius: var(--radius);\n        min-width: 10rem;\n        max-width: 100%;\n        min-height: 10rem;\n        max-height: 100%;\n      }\n      :host([dimention="height"]){\n        grid-template-columns: 1fr;\n      }\n      :host([dimention="width"]){\n        grid-template-rows: 1fr;\n      }\n      #main {\n        grid-row: 1;\n        grid-column: 1;\n        overflow: auto;\n      }\n      #side {\n        grid-row: 1;\n        grid-column: 2;\n        cursor: ew-resize;\n      }\n      #bottom {\n        grid-row: 2;\n        grid-column: 1;\n        text-align: center;\n        cursor: ns-resize;\n      }\n      #corner {\n        grid-row: 2;\n        grid-column: 2;\n        overflow: hidden;\n        cursor: nwse-resize;\n      }\n      .handle {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .handle svg {\n        transform: scale(0.5);\n      }\n      #bottom svg {\n        height: var(--handle_size);\n      }\n      #side svg {\n        width: var(--handle_size);\n      }\n      #corner svg {\n        width: var(--handle_size);\n        height: var(--handle_size);\n      }\n      :host(:not([resizing=""])) #main {\n        pointer-events: none;\n      }\n      :host([resizing="side"]) #side,\n      :host([resizing="corner"]) #side,\n      :host([resizing="corner"]) #corner,\n      :host([resizing="corner"]) #bottom,\n      :host([resizing="bottom"]) #bottom {\n        background-color: var(--c_highlight);\n      }\n      :host([dimention="height"]) #side,\n      :host([dimention="height"]) #corner,\n      :host([dimention="width"]) #bottom,\n      :host([dimention="width"]) #corner {\n        display: none;\n      }\n    `}}window.customElements.define("k-resize",Resize);