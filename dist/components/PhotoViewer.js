import Component from"./Component.js";import"./Icon.js";import{onEvent,offEvent,dispatchEvent}from"../utils/element.js";const openHandler=Symbol(),closeHandler=Symbol(),overlayHandler=Symbol(),prevHandler=Symbol(),nextHandler=Symbol(),keyboardHandler=Symbol(),imgKeyboardHandler=Symbol();export default class PhotoViewer extends Component{constructor(e="",n="",t={}){super();const{keyboardControls:o=!0,global:s=!1}=t;this.registerAttributes({src:e,alt:n,fullscreen:!1,keyboardControls:o,global:s})}attributeChangedCallback(e,n,t){super.attributeChangedCallback(e,n,t),this.rendered&&"src"===e&&n!==t?(this.shadowRoot.getElementById("img").src=t,this.shadowRoot.getElementById("fullscreen-img").src=t):this.rendered&&"alt"===e&&n!==t?(this.shadowRoot.getElementById("img").alt=t,this.shadowRoot.getElementById("fullscreen-img").alt=t):this.rendered&&"fullscreen"===e&&n!==t&&(dispatchEvent(this,"fullscreenchange "+(t?" fullscreen":" fullscreenclose")),this.updateNavigationState(),this.keyboardControls&&(t?document.addEventListener("keydown",this[keyboardHandler]):document.removeEventListener("keydown",this[keyboardHandler])))}async render(e){if(await super.render(e)){const e=this.shadowRoot.getElementById("img");e.src=this.src,e.alt=this.alt;const n=this.shadowRoot.getElementById("fullscreen-img");n.src=this.src,n.alt=this.alt;const t=this.shadowRoot.querySelector('slot[name="fullscreen-caption"]');if(t&&!t.assignedNodes().length){this.shadowRoot.querySelector("slot:not([name])").assignedNodes().forEach((e=>{const n=e.cloneNode(!0);this.appendChild(n).slot="fullscreen-caption"}))}return onEvent(e,"click",this[openHandler]),onEvent(e,"keydown",this[imgKeyboardHandler]),onEvent(this.shadowRoot.getElementById("close"),"click",this[closeHandler]),onEvent(this.shadowRoot.getElementById("fullscreen-overlay"),"click",this[overlayHandler]),onEvent(this.shadowRoot.getElementById("prev"),"click",this[prevHandler]),onEvent(this.shadowRoot.getElementById("next"),"click",this[nextHandler]),this.updateNavigationState(),!0}return!1}disconnectedCallback(){super.disconnectedCallback(),offEvent(this.shadowRoot.getElementById("img"),"click",this[openHandler]),offEvent(this.shadowRoot.getElementById("img"),"keydown",this[imgKeyboardHandler]),offEvent(this.shadowRoot.getElementById("close"),"click",this[closeHandler]),offEvent(this.shadowRoot.getElementById("fullscreen-overlay"),"click",this[overlayHandler]),offEvent(this.shadowRoot.getElementById("prev"),"click",this[prevHandler]),offEvent(this.shadowRoot.getElementById("next"),"click",this[nextHandler]),this.keyboardControls&&document.removeEventListener("keydown",this[keyboardHandler])}[imgKeyboardHandler]=e=>{"Enter"!==e.key||this.fullscreen||this.open()};[openHandler]=()=>{this.open()};[closeHandler]=()=>{this.close()};[overlayHandler]=e=>{e.target===e.currentTarget&&this.close()};[prevHandler]=e=>{e.stopPropagation();const n=this.getPrevSibling();n&&(this.close(),n.open())};[nextHandler]=e=>{e.stopPropagation();const n=this.getNextSibling();n&&(this.close(),n.open())};[keyboardHandler]=e=>{if("Escape"===e.key)this.close();else if("ArrowLeft"===e.key){const e=this.getPrevSibling();e&&(this.close(),e.open())}else if("ArrowRight"===e.key){const e=this.getNextSibling();e&&(this.close(),e.open())}};getPrevSibling(){if(this.global){const e=Array.from(document.getElementsByTagName("k-photo-viewer")),n=e.indexOf(this);return-1===n?null:e[0===n?e.length-1:n-1]}{let e=this.previousElementSibling;for(;e&&"K-PHOTO-VIEWER"!==e.tagName;)e=e.previousElementSibling;if(!e&&this.hasPhotoSiblings())for(e=this.parentElement.lastElementChild;e&&"K-PHOTO-VIEWER"!==e.tagName;)e=e.previousElementSibling;return e}}getNextSibling(){if(this.global){const e=Array.from(document.getElementsByTagName("k-photo-viewer")),n=e.indexOf(this);return-1===n?null:e[n===e.length-1?0:n+1]}{let e=this.nextElementSibling;for(;e&&"K-PHOTO-VIEWER"!==e.tagName;)e=e.nextElementSibling;if(!e&&this.hasPhotoSiblings())for(e=this.parentElement.firstElementChild;e&&"K-PHOTO-VIEWER"!==e.tagName;)e=e.nextElementSibling;return e}}hasPhotoSiblings(){return this.global?document.getElementsByTagName("k-photo-viewer").length>1:Array.from(this.parentElement.children).filter((e=>e!==this&&"K-PHOTO-VIEWER"===e.tagName)).length>0}updateNavigationState(){const e=this.fullscreen&&this.hasPhotoSiblings();this.shadowRoot.querySelectorAll(".nav-btn").forEach((n=>n.classList.toggle("d-n",!e)))}open(){this.fullscreen=!0}close(){this.fullscreen=!1}toggle(){this.fullscreen=!this.fullscreen}get shadowTemplate(){return'\n      <div id="wrapper">\n        <img id="img" tabindex="0" />\n        <div class="caption">\n          <slot></slot>\n        </div>\n        <div id="fullscreen-overlay">\n          <button id="close" class="no-btn">\n            <slot name="close">\n              <k-icon name="close"></k-icon>\n            </slot>\n          </button>\n          <button id="prev" class="nav-btn no-btn">\n            <slot name="prev">\n              <k-icon name="chevron-left"></k-icon>\n            </slot>\n          </button>\n          <button id="next" class="nav-btn no-btn">\n            <slot name="next">\n              <k-icon name="chevron-right"></k-icon>\n            </slot>\n          </button>\n          <div class="content">\n            <img id="fullscreen-img" />\n            <div class="caption">\n              <slot name="fullscreen-caption"></slot>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}get shadowStyles(){return`\n      ${super.shadowStyles}\n      :host {\n        display: block;\n      }\n      #wrapper {\n        position: relative;\n        width: 100%;\n        height: 100%;\n      }\n      #img {\n        max-width: 100%;\n        height: auto;\n        cursor: pointer;\n        outline: none;\n        border-radius: var(--img_radius, 0);\n      }\n      #img:focus {\n        box-shadow: var(--focus_shadow);\n      }\n      #fullscreen-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 9999;\n        background: rgba(0,0,0,0.9);\n        padding: 2rem;\n        display: none;\n      }\n      :host([fullscreen]) #fullscreen-overlay {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .content {\n        position: relative;\n        max-width: 100%;\n        max-height: 90vh;\n      }\n      #fullscreen-img {\n        max-height: 75vh;\n        max-width: 100%;\n        object-fit: contain;\n        cursor: default;\n      }\n      #close {\n        position: absolute;\n        top: 1rem;\n        right: 1rem;\n        z-index: 1;\n        background: none;\n        border: none;\n        color: white;\n        cursor: pointer;\n      }\n      .nav-btn {\n        position: fixed;\n        top: 50%;\n        transform: translateY(-50%);\n        z-index: 1;\n        background: none;\n        border: none;\n        color: white;\n        cursor: pointer;\n        padding: 1rem;\n        opacity: 0.7;\n        font-size: 3rem;\n        -webkit-text-stroke: 1px black;\n        text-stroke: 1px black;\n        text-shadow: 0 0 3px rgba(0,0,0,0.8);\n      }\n      .nav-btn::slotted(*),\n      .nav-btn k-icon {\n        filter: drop-shadow(0 0 2px rgba(0,0,0,1)) drop-shadow(0 0 2px rgba(0,0,0,1));\n      }\n      .nav-btn:hover {\n        opacity: 1;\n      }\n      #prev {\n        left: 1rem;\n      }\n      #next {\n        right: 1rem;\n      }\n      .caption {\n        text-align: center;\n        max-width: 600px;\n        width: fit-content;\n        margin: 1rem auto 0;\n      }\n      #fullscreen-overlay .caption {\n        color: white;\n      }\n      :host([fullscreen]) .caption {\n        color: white;\n      }\n    `}static observedAttributes=[...super.observedAttributes,"src","alt","fullscreen","keyboard-controls","global"]}window.customElements.define("k-photo-viewer",PhotoViewer);