import Component from"./Component.js";import{onEvent,offEvent,dispatchEvent}from"../utils/element.js";const _position=Symbol();export class ToastContainer extends Component{constructor(t="bottom center"){super(),this[_position]=t.toLowerCase(),this.setAttribute("position",this[_position])}get position(){return this[_position]}set position(t){t!==this[_position]&&(this[_position]=t.toLowerCase(),this.setAttribute("position",this[_position]))}get shadowStyles(){return`\n      ${super.shadowStyles}\n      :host {\n        position: fixed;\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        z-index: 1000;\n        pointer-events: none;\n        padding: 16px;\n        box-sizing: border-box;\n        max-width: 100%;\n        max-height: 100%;\n        overflow: hidden;\n      }\n\n      :host([position*="top"]) {\n        top: 0;\n      }\n\n      :host([position*="bottom"]) {\n        bottom: 0;\n      }\n\n      :host([position*="left"]) {\n        left: 0;\n        align-items: flex-start;\n      }\n\n      :host([position*="right"]) {\n        right: 0;\n        align-items: flex-end;\n      }\n\n      :host([position*="center"]:not([position*="top"]):not([position*="bottom"])) {\n        top: 50%;\n        transform: translateY(-50%);\n      }\n      \n      :host([position="center"]),\n      :host([position*="center"][position*="top"]),\n      :host([position*="center"][position*="bottom"]) {\n        left: 50%;\n        transform: translateX(-50%);\n      }\n\n      :host([position*="center"]:not([position="center"])) {\n        align-items: center;\n      }\n      \n      /* Combined transforms for center vertically and horizontally */\n      :host([position*="center"]:not([position*="top"]):not([position*="bottom"]):not([position="center"])) {\n        transform: translate(-50%, -50%);\n      }\n\n      ::slotted(*) {\n        pointer-events: auto;\n      }\n    `}}window.customElements.define("k-toast-container",ToastContainer);const closeHandler=Symbol(),actionHandler=Symbol(),timeoutId=Symbol(),animationEndHandler=Symbol(),_toastPosition=Symbol(),_closing=Symbol();export default class Toast extends Component{constructor({actionCallback:t=()=>{},closeCallback:n=()=>{},timeout:o=0,position:i="bottom center"}={}){super(),this[timeoutId]=-1,this[_toastPosition]=i.toLowerCase(),this[_closing]=!1,this[closeHandler]=()=>{this.close()},this[actionHandler]=()=>{!1!==this.actionCallback()&&this.close()},this[animationEndHandler]=t=>{t.animationName.includes("toast-hide")?(this.removeAttribute("animating"),this.opened=!1,dispatchEvent(this,"close openchange"),this.closeCallback(),this[_closing]=!1):t.animationName.includes("toast-show")&&this.removeAttribute("animating")},this.registerProps({actionCallback:t,closeCallback:n}),this.registerAttributes({hasAction:!1,hasClose:!1,hasIcon:!1,timeout:o,opened:!1,position:this[_toastPosition]})}async render(t){return!!await super.render(t)&&(onEvent(this.shadowRoot.getElementById("action"),"click",this[actionHandler]),onEvent(this.shadowRoot.getElementById("close"),"click",this[closeHandler]),onEvent(this,"animationend",this[animationEndHandler]),!0)}disconnectedCallback(){super.disconnectedCallback(),clearTimeout(this[timeoutId]),offEvent(this.shadowRoot.getElementById("action"),"click",this[actionHandler]),offEvent(this.shadowRoot.getElementById("close"),"click",this[closeHandler]),offEvent(this,"animationend",this[animationEndHandler])}attributeChangedCallback(t,n,o){super.attributeChangedCallback(t,n,o),"opened"===t&&n!==o&&o&&(this.hasAction=!!this.querySelector('[slot="action"]'),this.hasClose=!!this.querySelector('[slot="close"]'),this.hasIcon=!!this.querySelector('[slot="icon"]'))}open(){this[_closing]=!1,this.setAttribute("animating","in"),this.opened=!0,this.timeout&&(clearTimeout(this[timeoutId]),this[timeoutId]=setTimeout((()=>{this.close()}),this.timeout)),dispatchEvent(this,"open openchange")}close(){clearTimeout(this[timeoutId]),this.opened&&!this[_closing]&&(this[_closing]=!0,this.setAttribute("animating","out"))}get shadowTemplate(){return`\n      <div id="icon">\n        <slot name="icon"></slot>\n      </div>\n      <div id="message">\n        ${super.shadowTemplate}\n      </div>\n      <button id="action" class="no-style">\n        <slot name="action"></slot>\n      </button>\n      <button id="close" class="no-style">\n        <slot name="close"></slot>\n      </button>\n    `}get shadowStyles(){return`\n      ${super.shadowStyles}\n      @keyframes toast-show-bottom {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      @keyframes toast-hide-bottom {\n        from { opacity: 1; transform: translateY(0); }\n        to { opacity: 0; transform: translateY(20px); }\n      }\n      @keyframes toast-show-top {\n        from { opacity: 0; transform: translateY(-20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      @keyframes toast-hide-top {\n        from { opacity: 1; transform: translateY(0); }\n        to { opacity: 0; transform: translateY(-20px); }\n      }\n      @keyframes toast-show-left {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n      @keyframes toast-hide-left {\n        from { opacity: 1; transform: translateX(0); }\n        to { opacity: 0; transform: translateX(-20px); }\n      }\n      @keyframes toast-show-right {\n        from { opacity: 0; transform: translateX(20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n      @keyframes toast-hide-right {\n        from { opacity: 1; transform: translateX(0); }\n        to { opacity: 0; transform: translateX(20px); }\n      }\n      :host {\n        display: none;\n        min-width: 16rem;\n        max-width: calc(100% - ( 2 * var(--spacer) ));\n        background-color: var(--c_bg);\n        border-radius: var(--radius);\n        box-shadow: var(--drop_shadow);\n      }\n      :host([opened="true"]) {\n        display: flex;\n      }\n      :host([animating="in"][position*="bottom"]) {\n        animation: toast-show-bottom var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="out"][position*="bottom"]) {\n        animation: toast-hide-bottom var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="in"][position*="top"]) {\n        animation: toast-show-top var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="out"][position*="top"]) {\n        animation: toast-hide-top var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="in"][position*="left"]:not([position*="top"]):not([position*="bottom"])) {\n        animation: toast-show-left var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="out"][position*="left"]:not([position*="top"]):not([position*="bottom"])) {\n        animation: toast-hide-left var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="in"][position*="right"]:not([position*="top"]):not([position*="bottom"])) {\n        animation: toast-show-right var(--animation_ms, 300ms) ease forwards;\n      }\n      :host([animating="out"][position*="right"]:not([position*="top"]):not([position*="bottom"])) {\n        animation: toast-hide-right var(--animation_ms, 300ms) ease forwards;\n      }\n      #icon {\n        padding: var(--spacer);\n        padding-right: 0;\n      }\n      #message {\n        padding: var(--spacer);\n        flex: 1 1 auto;\n      }\n      :host(:not([has-close])) #close,\n      :host(:not([has-action])) #action,\n      :host(:not([has-icon])) #icon {\n        display: none;\n      }\n      #action {\n        background: transparent;\n        border: none;\n        color: var(--tc_primary, blue);\n        cursor: pointer;\n        padding: var(--spacer);\n      }\n      #action:hover {\n        color: var(--tc_primary__hover, lightblue);\n      }\n      #close {\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        padding: var(--spacer);\n        opacity: 0.7;\n        transition: opacity var(--animation_ms);\n      }\n      #close:hover {\n        opacity: 1;\n      }\n    `}static observedAttributes=[...super.observedAttributes,"opened"];static create(t,n={}){let{position:o="auto",removeOnClose:i=!0,closeCallback:s=()=>{},action:e=!1,close:a=!1,icon:r=!1}=n;"auto"===o&&(o=window.innerWidth<=768?"bottom center":"top right");let c=document.querySelector(`k-toast-container[position="${o}"]`);c||(c=new ToastContainer(o),document.body.appendChild(c));const l=new Toast({position:o,timeout:5e3,...n,closeCallback:(...t)=>{i&&(l.remove(),0===c.children.length&&c.remove()),s(...t)}});if(l.innerHTML=t,r)if(r instanceof HTMLElement)r.slot="icon",l.appencChild(r);else if("string"==typeof r){const t=document.createElement("span");t.slot="icon",t.innerHTML=r,l.appendChild(t)}if(e)if(e instanceof HTMLElement)e.slot="action",l.appencChild(e);else if("string"==typeof e){const t=document.createElement("span");t.slot="action",t.innerHTML=e,l.appendChild(t)}if(a)if(a instanceof HTMLElement)a.slot="close",l.appencChild(a);else if("string"==typeof a){const t=document.createElement("span");t.slot="close",t.innerHTML=a,l.appendChild(t)}return l.open(),c.appendChild(l),l}static success(t,n={}){const o=Toast.create(t,{icon:'<k-icon name="check"></k-icon>',...n});return o.classList.add("bg-success"),o}static warning(t,n={}){const o=Toast.create(t,{icon:'<k-icon name="warning"></k-icon>',...n});return o.classList.add("bg-warning"),o}static error(t,n={}){const o=Toast.create(t,{icon:'<k-icon name="error"></k-icon>',...n});return o.classList.add("bg-danger"),o}}window.customElements.define("k-toast",Toast);