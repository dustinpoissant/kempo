import Component from"./Component.js";export default class Stacks extends Component{get panels(){return[...this.querySelectorAll("k-stack-panel")]}reorderPanels(){this.panels.reverse().forEach(((t,e)=>t.style.setProperty("--order",e)))}get shadowStyles(){return"\n      :host {\n        --stack_width: 16rem;\n        display: block;\n        height: 100%;\n        position: relative;\n      }\n    "}}window.customElements.define("k-stacks",Stacks);export class StackPanel extends Component{constructor(){super(),this.registerAttribute("stack",0)}connectedCallback(){super.connectedCallback();const t=this.stacks;t&&t.reorderPanels()}attributeChangedCallback(t,e,s){super.attributeChangedCallback(t,e,s),"stack"===t&&e!==s&&this.style.setProperty("--stack",s)}get stacks(){return this.closest("k-stacks")}get shadowStyles(){return"\n      :host {\n        --stack: 0;\n        display: block;\n        height: 100%;\n        width: var(--stack_width);\n        position: absolute;\n        top: 0;\n        left: calc(var(--stack) * var(--stack_width));\n        transition: left var(--animation_ms) ease-in-out;\n        z-index: var(--order);\n      }\n    "}static observedAttributes=[...super.observedAttributes,"stack"]}window.customElements.define("k-stack-panel",StackPanel);