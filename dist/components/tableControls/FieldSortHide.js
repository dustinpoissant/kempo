import TableControl from"./TableControl.js";import{onEvent,offEvent}from"../../utils/element.js";import Dialog from"../Dialog.js";const clickHandler=Symbol("clickHandler");export default class FieldSortHide extends TableControl{constructor(){super(),this[clickHandler]=this.openDialog.bind(this)}async render(e=!1){return!!await super.render(e)&&(onEvent(this.shadowRoot.getElementById("sort"),"click",this[clickHandler]),!0)}disconnectedCallback(){super.disconnectedCallback(),offEvent(this.shadowRoot.getElementById("sort"),"click",this[clickHandler])}openDialog(){import("../Sortable.js");const e=Dialog.create(`\n      <h3 class="m0 ph" slot="title">Show / Hide Fields</h3>\n      <div class="m">\n        <k-sortable id="sorting">\n          ${this.table.fields.map((e=>`\n            <k-sortable-item data-field="${e.name}">\n              <label class="field pb0">\n                <input\n                  class="field-visibility"\n                  data-field="${e.name}"\n                  type="checkbox"\n                  ${e.hidden?"":"checked"}\n                  style="height: 1.25rem; width: 1.25rem"\n                />\n                ${e.label}\n              </label>\n            </k-sortable-item>\n          `)).join("")}\n        </k-sortable>\n      </div>\n    `,{width:"400px",cancelText:"Close"});onEvent(e,"click",(e=>{if(!e.target.closest(".field"))return;const t=e.target.closest(".field-visibility");if(t){const e=t.getAttribute("data-field");this.table.setFieldHiddenState(e,!t.checked)}}));const t=e.querySelector("#sorting");onEvent(t,"sort",(()=>{const e=Array.from(t.querySelectorAll("k-sortable-item")).map((e=>e.getAttribute("data-field")));this.table.reorderFields(e)}))}get shadowTemplate(){return'\n      <button\n        id="sort"\n        class="no-btn icon-btn"\n      >\n        <k-icon name="table-visibility"></k-icon>\n      </button>\n    '}}window.customElements.define("k-tc-field-sort-hide",FieldSortHide);